// <auto-generated />
using System;
using Hospital_app_02_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital_app_02_BE.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20210407210707_2021_04_08_NewsTableAndBirthDateColumns")]
    partial class _2021_04_08_NewsTableAndBirthDateColumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Hospital_app_02_BE.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Everst, 8577",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@hospital.com",
                            EmploymentDate = "4/8/2021 12:07:06 AM",
                            Name = "John",
                            Password = "secret11S",
                            PersonalCode = "388888888",
                            Phone = "867784585",
                            Role = "Šeimos gydytojas",
                            Surname = "Root",
                            Token = "testTokenHAHAHAHAAHAHAH"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Everst, 8577",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "stefan@hospital.com",
                            EmploymentDate = "4/8/2021 12:07:06 AM",
                            Name = "Stefan",
                            Password = "secret11S",
                            PersonalCode = "388888888",
                            Phone = "867784585",
                            Role = "Šeimos gydytojas",
                            Surname = "Green",
                            Token = "testTokenHAHAHAHAAHAHAH"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Everst, 8577",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@hospital.com",
                            EmploymentDate = "4/8/2021 12:07:06 AM",
                            Name = "Greg",
                            Password = "secret11S",
                            PersonalCode = "388888888",
                            Phone = "867784585",
                            Role = "Chirurgas",
                            Surname = "Root",
                            Token = "testTokenHAHAHAHAAHAHAH"
                        });
                });

            modelBuilder.Entity("Hospital_app_02_BE.Data.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2021, 4, 8, 0, 7, 6, 748, DateTimeKind.Local).AddTicks(8531),
                            Description = "Greitu metu pasirodys naujos vakcinos nuo COVID-19",
                            Title = "Naujos vakcinos importas"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 4, 8, 0, 7, 6, 748, DateTimeKind.Local).AddTicks(9611),
                            Description = "Šiuo metu vyksta laikini sistemos atnaujinimai, todėl sistema gali veikti netinkamai. Atsiprašome.",
                            Title = "Sistemos atnaujinimai"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2021, 4, 8, 0, 7, 6, 748, DateTimeKind.Local).AddTicks(9654),
                            Description = "Šiuo metu gydymo įstaiga įdarbina gausybę naujų žmonių!",
                            Title = "Naujas kolektyvas"
                        });
                });

            modelBuilder.Entity("Hospital_app_02_BE.Data.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RiskLevel")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Evergreeen 18, 8577",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "linanana@gmail.com",
                            Name = "Lina",
                            Password = "linaSlapta123",
                            PersonalCode = "388888888",
                            Phone = "867784585",
                            RiskLevel = 5,
                            Surname = "Dragel",
                            Token = "testToken44775484"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Evergreeen 18, 8577",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jonis@gmail.com",
                            Name = "Jons",
                            Password = "jonisNesakysiu123",
                            PersonalCode = "388888888",
                            Phone = "867784585",
                            RiskLevel = 1,
                            Surname = "Petrauskas",
                            Token = "testToken44775485"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Evergreeen 18, 8577",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "antanuks@gmail.com",
                            Name = "Antanas",
                            Password = "linosSlaptas123",
                            PersonalCode = "388888888",
                            Phone = "867784585",
                            RiskLevel = 5,
                            Surname = "Dragel",
                            Token = "testToken44775486"
                        });
                });

            modelBuilder.Entity("Hospital_app_02_BE.Data.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PatientId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2021, 4, 8, 0, 7, 6, 748, DateTimeKind.Local).AddTicks(2893),
                            Description = "Karščiavimas",
                            EmployeeId = 1,
                            PatientId = 1,
                            Title = "Registracija pas šeimos daktarą"
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2021, 4, 8, 0, 7, 6, 748, DateTimeKind.Local).AddTicks(6299),
                            Description = "Pilvo skausmai",
                            EmployeeId = 1,
                            PatientId = 2,
                            Title = "Registracija pas šeimos daktarą"
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2021, 4, 8, 0, 7, 6, 748, DateTimeKind.Local).AddTicks(6405),
                            Description = "Kojos operacija",
                            EmployeeId = 3,
                            PatientId = 1,
                            Title = "Registracija pas chirurgą"
                        });
                });

            modelBuilder.Entity("Hospital_app_02_BE.Data.Entities.Registration", b =>
                {
                    b.HasOne("Hospital_app_02_BE.Data.Entities.Employee", "Employee")
                        .WithMany("Registrations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital_app_02_BE.Data.Entities.Patient", "Patient")
                        .WithMany("Registrations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Hospital_app_02_BE.Data.Entities.Employee", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("Hospital_app_02_BE.Data.Entities.Patient", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
